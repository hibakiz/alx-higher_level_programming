Test for 7-base_geometry.py module
-------------------------------------------

import the module
>>> geo = __import__('7-base_geometry').base_geometry

-------------------------------------------

Case 1: Checking for class docstring:
>>> docc = __import__("7-base_geometry").BaseGeometry.__doc__
>>> len(docc) > 1
True

-------------------------------------------

Case 2: Checking for module docstring:
>>> m = __import__("7-base_geometry").__doc__
>>> len(m) > 1
True

-------------------------------------------

Case 3: Checking for method docstring:
>>> mod1 = __import__("7-base_geometry").BaseGeometry.area.__doc__
>>> len(mod1) > 1
True
>>> mod2 = __import__("7-base_geometry").BaseGeometry.integer_validator.__doc__
>>> len(mod2) > 1
True

-------------------------------------------

Case 4: Checking integer validator for passing integer:
>>> b.integer_validator("integer", 1)

-------------------------------------------

Case 5: Checking for area failure:
>>> b = geo()
>>> b.area()
Traceback (most recent call last):
...
Exception: area() is not implemented

-------------------------------------------

Case 6: Checking too many arguments for area:
>>> b.area(1)
Traceback (most recent call last):
...
TypeError: area() takes 1 positional argument but 2 were given

-------------------------------------------

Case 7: Checking for integer < 0
>>> b.integer_validator("integer", -5)
Traceback (most recent call last):
...
ValueError: integer must be greater than 0

-------------------------------------------

Case 8: Checking for non-integer types:
>>> b.integer_validator("bool", True)
Traceback (most recent call last):
...
TypeError: bool must be an integer
>>> b.integer_validator("float", 1.5)
Traceback (most recent call last):
TypeError: float must be an integer

-------------------------------------------

Case 9: Checking for no arguments to integer_validator:
>>> b.integer_validator()
Traceback (most recent call last):
...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

-------------------------------------------

Case 10: Checking for only 1 argument to integer_validator:
>>> b.integer_validator("integer")
Traceback (most recent call last):
...
TypeError: integer_validator() missing 1 required positional argument: 'value'

-------------------------------------------

Case 11: Checking for too many arguments:
>>> b.integer_validator("integer", 1, 2)
Traceback (most recent call last):
...
TypeError: integer_validator() takes 3 positional arguments but 4 were given

