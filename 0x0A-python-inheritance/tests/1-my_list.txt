Test for 1-my_list.py module
-------------------------------------------

import the module
>>> MyList = __import__('1-my_list').MyList

-------------------------------------------

case 1: alx case

>>> my_list = MyList()
>>> my_list.append(1)
>>> my_list.append(4)
>>> my_list.append(2)
>>> my_list.append(3)
>>> my_list.append(5)
>>> print(my_list)
[1, 4, 2, 3, 5]
>>> my_list.print_sorted()
[1, 2, 3, 4, 5]
>>> print(my_list)
[1, 4, 2, 3, 5]

-------------------------------------------

case 2:typo in object name

>>> MyList = __import__('1-my_list').MyList
>>> my_lit.print_sorted()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'my_lit' is not defined

-------------------------------------------

case 3: use a list not a number for the class

>>> a = [8, 7, 4]
>>> my_list = MyList(a)
>>> my_list.print_sorted()
[4, 7, 8]

-------------------------------------------

case 4: use an empty list not a number for the class

>>> a = []
>>> my_list = MyList(a)
>>> my_list.print_sorted()
[]

-------------------------------------------

case 5: one number

>>> my_list = MyList()
>>> my_list.append(98)
>>> my_list.print_sorted()
[98]
>>> print(my_list)
[98]

-------------------------------------------

case 6: all numbers are equal

>>> my_list2 = MyList()
>>> my_list2.append(98)
>>> my_list2.append(98)
>>> my_list2.append(98)
>>> my_list2.append(98)
>>> my_list2.print_sorted()
[98, 98, 98, 98]

-------------------------------------------

case 7: use the parent object
>>> my_list = [1, 2, 3]
>>> my_list.print_sorted()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'list' object has no attribute 'print_sorted'

-------------------------------------------

case 8: use negative numbers

>>> MyList = __import__('1-my_list').MyList
>>> my_list = MyList()
>>> my_list.append(5)
>>> my_list.append(1)
>>> my_list.append(-1)
>>> my_list.append(51)
>>> my_list.append(-5)
>>> my_list.print_sorted()
[-5, -1, 1, 5, 51]


